Current Work Order
	[_] % Implement ships
		barehull
			: This is the ship's envelope. A room that contains all parts 
			: of the ship.  Navigation and Combat is defined on it.
		Code parts
			typeclass BareHull
				: the boat itself as a thing
				modify VesselObject
			typeclass ShipStation
				: all the places tp be within a ship
			typeclass - other classes substations?
				specific parts of the ship might get their own TC
				ie mast, quarter deck, poop, ward room etc.
		[_] multi-roomed ships
			: ships have rooms with different functions
			list of room examples:
				main deck, quarter-deck, the 
				masthead, the bilge, state room, ward
				galley, gun deck etc...
		Shipbuilding tools
			: I want a set of commands customised to allow @builders to build
			: unique ships, and later to be able to automatically produce
			: them.
			build hull
				a floating objected typeclass
				allows 'board' command
			Shipstation command
				create/drop ShipStation object. 
				: How about implement ship building commands as methods in the
				: vessel typeclass?
				entrance
		Skylarking
			: the art of moving deliberately around from place to place on a
			: ship
			directions:
				: forward, aft, port, starboard, windward, looard, up, down,
				: aloft, below 

	Fake Sail -  no polars
		[X] get wind and current from world wind server.
		review boats heading
		boat can sail at any angle at 1/2 WS
		: This take wind and converts its direction to the ships heading and
		: converts the speed to 1/2 itself. 
	[_] 25% Easy Sailing with POLARS
		[X] get wind and current from world wind server.
		[_] look up vessel's polar in DB
			Where do I store this data?
				: First thing: put POLs in a folder.
		[_] Amend Vessel Typclass to require polar value
			simply store a polar class in the db
		[_] review boats heading
		[_] calculate sail power
			[_] WIND_ANGLE = WIND_DIRECTION - BOAT_HEADING
			[_] BOATSPEED = WIND_SPEED * WIND_ANGLE * BOAT_POLAR
		Sailpower replaces wind and power 
		COG = Sailpower + Current
	Hard Sailing
		account for sail trim and canvas
		account for leeway
			ie. True course neq Heading
Done (for now)
	[X] 100% Implement the Ocean
		[X] **coastal waters** 
			[X] half land and half sea rooms. Characters can walk along the land part using land exits.
			[X] boats traverse water-exits
			[X] boats can transition from the coastal water to the high sea.
			[X] characters should not be able to without a boat
		[X] **High Sea**
	[X] 100% Define coastlines
		[X] In a room object?  
			Inland rooms prohibit arrival by NAV commands
				on a move attempt
					: if the direction set would cause the ship to land on
					: the coast line, belay with a warning.
				need dryland room typeclass
			Also VesselObject (typeclass) may not use standard exits.
	[X] 100% Conning Mode
		conn commands are in a command set added to an object when they board a vessel
		Well that worked so easily I didn't get around to setting any  tasks
		[X] Nav commands should not be available to non-vessels
		Idea: 
			: vessels provide a command "take the conn; conn" that then adds a
			: command set to the player with all the directional commands.
			: "conn" will check that the player is INSIDE the vessel or quit.
	[X] Fix Coastal Cruising
		: This is caused by the fact that my "navigation commands" are bare
		: directions and therefore conflict unsurprisingly with directional
		: exits.  But this is unnessessary. Steering a ship should only be
		: done from INSIDE a vessel object which should have no internal exits
		: with cardinal names.
		:
		: SO this probably provides my final justification for relocating all
		: nav commands from the sea rooms to the vessel.  But not attach them
		: to the vessel but instead make them available to a character, on
		: board, upon issuing a particular command.
		:
		: Eg.  "Take the Helm"  which adds a command set which lets the driver
		: steer the ship in cardinal directions.  This in turn makes the ship
		: move according to the coordinate system but does not require the
		: ship to access exits. This would also remove the need to "lock"
		: exits agains vessel traffic.
	[X] CmdSteer
		Notes:
			: Work on making steer check where it is.  Wait, I think I got it.
			: If the sea room has headings as commands...  Just like the
			: coastal room had exits...  Then "steer nw" will work as
			: expected. 
			:
			: This will suffice at this stage. The future goal of having 32 or
			: even 360 headings can probably wait. 
			:
			: For now I'll be happy with at least 8 and at most 16 headings.
			: 16 headings will suffice me a long time I think.  
			:
			: So the headings, are like exits, commands attached to the room.
			: This means u don't even have to do anything to the "steer"
			: command. At least not on this account. I might still want to
			: consider a way to prevent vessels from executing too many random
			: commands.
		[X] Make directional commands for the Sea room
		[X] locked to "inside vessel"
			: No, better to keep using the parser to simply give an error msg
			: to players who try to steer from outside the vessel.
	[X] Debug "at_after_move" hook on vessel typeclass.
		: Fixed by reseting skiff to use vessel typeclass
	[X] fix "look" on board so that it overloads "look" (refer to 
		: tutorial bridge room world bridge room for example)
		: Do this first because it will inform the other projects
		: default look on board should display the view outside ship plus just
		: perhaps the name of the vessel?
	[X] cmd_set conflicts
		: Problem is that the commands in the Vessel command set are loaded
		: for all objects in a room.  If there are two objects they conflict
		: with eatchother.
		Fixed.
			: The "multi match" condition is resolved by inviting the user to 
			: narrow their target by typing N-commant where N is the  index in 
			: a list of commands. Passable for now. In the future I might wish
			: for an improved interface.  I.e. allow players to target the
			: command in advance by argument. 
		board
			Make this a universal command on characters
				require a target argument (vessel to board)
				check target is:
					vessel; 
					AND boardable by caller
				Else say
					You cannot board <target>
			BUT:
				before doing this, check out whether there is advice for this
				already.
		look
			Use Chris's approach
				Create a CmdSetLook
					priority = 1
					def at_cmdset_creation(self)
						self.add(CmdLookShip())
				Then define a new 'look' command
				Finally edit the hooks on my vessel typeclass
					at_object_leave
					at_obect_receive
					define a view_outside function
			My idea
				edit the default 'look' to return a 'view' attribute
				: Some objects might have a "view" attribute.  If you you look at
				: an object with a view it the look message will return the view
				: as well as the standard description, if you are inside the
				: object at the time.
	[X] 100% Dynamicaly created Sea rooms
		: Upon entering the Sea - a vessel is given a new unique room.  
		[X] 100% Dynamic Room
			: According to this theory, the room will hold the vessel and 
			: update its own position as needed.
			[X] Vessel divergence
				: okay the plan is that the moving vessel has to create a new
				: dynasea for themselves if the current room has any other
				: objects.
			[X] Clean up
				At reload empty dynamic rooms delete themselves
	[X] 100% World Building Tools
		Require coordinates
			: Every "Outside" room should have coordinates
			: enforce this in the building tools
			modify @dig to throw error or prompt for coordinates.
			modify @tunnel to automatically place rooms at coordinate points
			allow exception
				for special rooms not to have coordinates
				or for interior rooms maybe
	[X] 100% Global Model
		: If I want to use the historical globe with historical charts I'l
		: need a way to refer to fixed rooms by lat/lon coordinates
		: I will also need to implement navigation by those coordinates
		[X] implement haversine model
		[X] implement vector movement
			assume starting coordinates
			input heading + distance
			output new coordinates
	[X] 100% Navigation Project
		[X] Test transition from coastal to coastal rooms
		[X] object contents should all automatically inherit position. 
			:Ie. so that if a sailor jumps overboard at sea, they will end
			:up in the sea rather than back in the room where they boarded
			:or something.
			on_object_receive 
			done I think, for all Searooms
		[X] Problem with vessel updating position even when move fails.
	[X] simple single-room vehicles
		[X] DONE: players can enter and steer the boat around other rooms
	[X] Remote Wind
		: Adjust wind and currnt to  be global scripts that can be controlled
		: by ingame commands.  ies. setWind 90 12  = West wind, 12 knots
		Use Scripts
			make a wind and weather typeclass global
				with an interval of 0 so it's always on
				persisent = yes
			create it at initial setup
			it shuld have methods for setting wind and current etc.
	[X] Vector Drift
		[X] This moves ships/floaters by adding up the forces acting on the vessel
		[X] Convert the rowing 
			[X] Rowing
				: So rowing seems to work alright. A two part process. Steer
				: sets an angular direction. And row sets a speed.  I'l then
				: move at that speed for six units of time. (the game pretends
				: those are hours).
				[X] Steering. and stopping
					: I can steer while the rowing continues. 
					: and stop at any time too.
			[X] Wind
				wind
			[X] Current
Design Strategy
	Water World Scheme
		Summary
			: With this scheme I start with a globe with a uniform navigable
			: surface. All water.  In a sense this does not need to be
			: "designed or built" its not a thing. That is it is not by itself
			: represented by an in game object. Instead the existance of a
			: globe is implied by the use of LatLon and the haversine equation
			: to calculate positions. Possibly every object should at all
			: times have a position.  
			:
			: The work on movement functions, magic, rowing, and sailing.
			: 
			: With or before sailing invent wind.  Later invent weather,
			: waves, and currents.
			:
			: Then get sailing working. Then we have a water world. At that
			: point I'll have to decide whether to work on ships or land.
		FlowChart
			Movement
				magic
					"skip" or "shift"
					: > skip 090 55
					: means move 55 miles due east
				rowing
			Wind
				sailing
			Weather
			Current
				Drifting
			Decision
				Land
				or
				Ships
			Ships
				multirooms
				navigation functions
				combat
			Land
				:wq
				:
	Navigation
		instant global/spherical navigation
	Sailing & Rowing
		Rowing:
			Navigation over time
		Sailing:
			Simulate effect of wind and wave resistance
	Define Land and Sea
		: As in what is the difference between solid land and ocean?
	World Building
		: Ideally use an historical geocode db to locate land
		: also use db of coastline means of positioning the dry land
	Implement Crew (npcs that sail or help you sail) 
		look to it.
		NPCs are character entities.
		Contemplate a division of character and player and AI
		so that All characters are equal, but may by times be played 
			puppeted by either human or AI players
Future features (wishlist)
	[_] Xebec
		: this is the rowing over time module, I call it Xebec rather than
		: galley because it will be a transitional mode.
		Start with single force impulse movement over time
			Derived from vector movements above
			So the current travel command should work as basis
				Just decide on a rate ie. distance/time
		But in practice sailing over time involves 2 steps
			1. steer the boat to face a direction
				with oars this makes sense, one can turn in place.
			2. wait for movement to occur
				i. set boat in motion
				ii. halt forward propulsion
		Review the vehicle tutorial 
			: a simple script or two and object methods on the vessel should
			: do it.
		Then upgrade to Multiple forces
		: so that it sets the course and then begins to move over time...
		: (see delayed execeution tut) so I should be able to "steer N"
		: and then the ship will sail N, slowly updating position
		: periodically.
	Coastal detail and navigation
		: this is the implementation of specifc  coastal conditions and
		: topography either through representation of abstraction
		Representation model: a cartesian grid inside every location
			: this means we could draw a map of the coast line or shoals and
			: players could naigate around inside the region. 
			Pro: realistic?
			Con: I don't hink it would be fun in a text-only interface. 
		Abstraction model: a profile for each section of coastline
			: this means that in a coastal room are a set of activities or
			: objectives and the coastl profile influences how easy/hard
			: safe/dangerous it is to attempt them.
		Hybride
			: mostly an abstraction model BUT with 1 to 3 room edges
			: defined as the physical coastline. 
	Define coastlines and land masses In a database
		The db designates out of bounds - unnavigable waters.
			So you cannot sail inland from a coastal room.
	Just Add Water
		Dynamic room cleanup
			[_] triggered by the absence of any vessels
				[X] only "at object leave"
				[_] interupted by "at object receive" 
					: only if new object is a vessel
			[_] cleans up all non-vessel objects
				[_] move them to an arbitrary holder
			[_] deletes room & self
	Boatview Improvements
		When looking from on board a boat:
			strip out the contents of the room.
			colour code the inboard and outboard view?
	Boarding ships
		: When their are two vessels in the same room: I would like to be 
		: able to specify by key which one I want to board. I.e. board boat 
		: vs board skiff.
	[_] % Hexaglobe
		[_] Research hex globes
	Ship to ship combat
	Rivers
	Water Exits
		: This is actually pretty important early on. Vessels can only move
		: through water exits, AND non vessel cannot move through.  This might
		: be enough to define coastal cruising and river navigation.
	Naval organization and ranking system
	Economy
	WIND & WEATHER at sea, on the coast, and inland
	[_] Globe
		: a dictionary of tuples.  
		: probably an object/class containing the dictionary and an interface
		: for editing and reviewing its contents.
		[_] create a "globe object" in world.
			[_] learn how other typeclasses can access it
			Use a Script object -see typeclasses/scripts.py
				: It has pretty much everything you would want to know.
		[_] Accessible by certain commands
			[_] @dig
				: should update the globe with position for every new room
				: probably manually.
			[_] @tunnel
				: tunnel is like @dig but will it be allowed to automatically
				: choose positions?
				:
				: I doubt it because I don't think I'm prepared to make the
				: globe actualy responsible for enforcing cartesian reality
			[_] move_to()
				: need to be able to look up positions in order to see where
				: to move an object
			[_] CmdFix
				: a player/builder command to see current coordinates
				: an ingame version of this 
		Global properties?
			It might also be possible to develop other properties of the globe
			such as currents and weather and climate patterns.  I'm not sure.
	[_] Website and Portal
		[_] make a cgi to display the manifest/project.html on the portal
Reference
